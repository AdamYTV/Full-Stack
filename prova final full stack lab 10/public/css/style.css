/* Define a cor de fundo da p√°gina */
body {
    background-color: #f0f0f0;
    font-family: Arial, sans-serif;
}

/* Centraliza elementos com a classe "container" */
.container {
    width: 50%;
    margin: 50px auto;
    text-align: center;
}

/* Define estilo padr√£o para inputs e bot√µes */
input, button {
    margin: 10px 0;
    padding: 10px;
    width: 80%;
}

/* node -v
npm -v
Se aparecer algo como:

Copiar
Editar
v18.17.0
9.6.7
Est√° funcionando!

‚úÖ 4. Depois disso:
Na sua pasta:

powershell
Copiar
Editar
cd "C:\Users\w10\Documents\GitHub\prova final full stack lab 10"
Instale as depend√™ncias:

powershell
Copiar
Editar
npm install
Rode o projeto:

powershell
Copiar
Editar
npm start

mongodb+srv://hammadehadam:<db_password>@adam.6tzqch3.mongodb.net/?retryWrites=true&w=majority&appName=Adam

npm install mongodb

_____---______----______-----________-------______----______-----______-----____

meu-site/
‚îÇ
‚îú‚îÄ‚îÄ server.js
‚îú‚îÄ‚îÄ .env
‚îú‚îÄ‚îÄ package.json  ‚Üê ser√° criado depois
‚îú‚îÄ‚îÄ models/
‚îÇ   ‚îî‚îÄ‚îÄ Usuario.js
‚îú‚îÄ‚îÄ views/
‚îÇ   ‚îú‚îÄ‚îÄ home.ejs
‚îÇ   ‚îî‚îÄ‚îÄ resposta.ejs
‚îú‚îÄ‚îÄ public/
‚îÇ   ‚îî‚îÄ‚îÄ style.css

cd caminho/para/meu-site
npm init -y
npm install express ejs mongoose dotenv


adam 

1Ô∏è‚É£ CRIE A ESTRUTURA DE PASTAS
Crie uma pasta chamada meu-projeto com a seguinte estrutura:

arduino
Copiar
Editar
meu-projeto/
‚îú‚îÄ‚îÄ server.js
‚îú‚îÄ‚îÄ .env
‚îú‚îÄ‚îÄ models/
‚îÇ   ‚îî‚îÄ‚îÄ Usuario.js
‚îú‚îÄ‚îÄ views/
‚îÇ   ‚îú‚îÄ‚îÄ home.ejs
‚îÇ   ‚îî‚îÄ‚îÄ resposta.ejs
‚îú‚îÄ‚îÄ public/
‚îÇ   ‚îî‚îÄ‚îÄ style.css
2Ô∏è‚É£ ABRA O TERMINAL NA PASTA DO PROJETO
No terminal (ou CMD/PowerShell), v√° at√© a pasta:

bash
Copiar
Editar
cd caminho/para/meu-projeto
3Ô∏è‚É£ INICIE O PROJETO E INSTALE DEPEND√äNCIAS
bash
Copiar
Editar
npm init -y
npm install express ejs mongoose dotenv
4Ô∏è‚É£ CRIE O ARQUIVO .env
Crie um arquivo chamado .env e adicione:

ini
Copiar
Editar
MONGO_URI=mongodb://127.0.0.1:27017/usuariosdb
5Ô∏è‚É£ COPIE ESTES C√ìDIGOS:
üìÑ server.js
js
Copiar
Editar
const express = require('express');
const mongoose = require('mongoose');
const path = require('path');
const Usuario = require('./models/Usuario');
require('dotenv').config();

const app = express();
const PORT = 80;

mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true
});

app.use(express.urlencoded({ extended: true }));
app.use(express.static(path.join(__dirname, 'public')));
app.set('view engine', 'ejs');

app.get('/', (req, res) => {
  res.render('home');
});

app.post('/enviar', async (req, res) => {
  const novoUsuario = new Usuario(req.body);
  await novoUsuario.save();
  res.redirect('/resposta');
});

app.get('/resposta', async (req, res) => {
  const usuarios = await Usuario.find();
  res.render('resposta', { usuarios });
});

app.listen(PORT, () => {
  console.log(`Servidor rodando em http://localhost`);
});
üìÑ models/Usuario.js
js
Copiar
Editar
const mongoose = require('mongoose');

const UsuarioSchema = new mongoose.Schema({
  nome: String,
  email: String
});

module.exports = mongoose.model('Usuario', UsuarioSchema);
üìÑ views/home.ejs
html
Copiar
Editar
<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <title>Home</title>
  <link rel="stylesheet" href="/style.css">
</head>
<body>
  <h1>Bem-vindo</h1>

  <img src="https://via.placeholder.com/400" alt="Exemplo">

  <ul>
    <li>Item 1</li>
    <li>Item 2</li>
  </ul>

  <form action="/enviar" method="POST">
    <input type="text" name="nome" placeholder="Seu nome" required>
    <input type="email" name="email" placeholder="Seu email" required>
    <button type="submit">Enviar</button>
  </form>
</body>
</html>
üìÑ views/resposta.ejs
html
Copiar
Editar
<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8">
  <title>Resposta</title>
  <link rel="stylesheet" href="/style.css">
</head>
<body>
  <h1>Lista de Usu√°rios</h1>

  <ul>
    <% usuarios.forEach(usuario => { %>
      <li><%= usuario.nome %> - <%= usuario.email %></li>
    <% }) %>
  </ul>

  <a href="/"><button>Voltar</button></a>
</body>
</html>
üìÑ public/style.css
css
Copiar
Editar
body {
  font-family: Arial;
  padding: 20px;
  background-color: #f2f2f2;
}

h1 {
  color: #333;
}

img {
  max-width: 100%;
  height: auto;
}

form input, form button {
  display: block;
  margin: 10px 0;
  padding: 8px;
}
6Ô∏è‚É£ INICIE O MONGODB
Abra outro terminal e digite:

bash
Copiar
Editar
mongod
Ou use o MongoDB Compass se preferir uma interface gr√°fica.

7Ô∏è‚É£ RODE O SERVIDOR
De volta ao terminal da pasta do projeto, execute:

bash
Copiar
Editar
sudo node server.js
(Em Windows, use node server.js sem sudo.)

8Ô∏è‚É£ ACESSE NO NAVEGADOR
Abra:

arduino
Copiar
Editar
http://localhost
Voc√™ ver√° a p√°gina home.ejs. Ao enviar o formul√°rio, ser√° redirecionado para resposta.ejs com os dados salvos no banco.

